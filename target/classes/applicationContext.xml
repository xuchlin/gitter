<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
		 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xmlns:mybatis="http://mybatis.org/schema/mybatis-spring"
		 xmlns:context="http://www.springframework.org/schema/context"
		 xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
		 xsi:schemaLocation="http://www.springframework.org/schema/beans
	 http://www.springframework.org/schema/beans/spring-beans-4.0.xsd 
    http://www.springframework.org/schema/aop 
    http://www.springframework.org/schema/aop/spring-aop-4.0.xsd 
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-4.0.xsd
    http://mybatis.org/schema/mybatis-spring
    http://mybatis.org/schema/mybatis-spring-1.2.xsd  "  default-autowire="byName">  
	
	<!-- 扫dao包 
    	@Component:总注解 
    	必须找到加入了:@Repository 数据层dao层 
    	@Servcice 标注service层  @Controller都会被
    	Spring管理起来，如果没有加的就忽略。
    -->
    <context:component-scan base-package="com.shopping.dao"></context:component-scan>
   
    
	<!-- 使用org.springframework.beans.factory.config.PropertyOverrideConfigurer后处理加载数据源参数 -->
	<context:property-override location="classpath:jdbc.properties"/>
	<!-- 配置 c3p0数据源 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"></bean> 
	
	<!-- <context:property-placeholder location="classpath:jdbc.properties"/> -->
	<!-- <context:property-placeholder location="classpath:jdbc.properties"/>等价于<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"
		id="propertyPlaceholderConfigurer">
		<property name="location" value="classpath:jdbc.properties"></property>
	</bean> -->
	<!-- <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${driverClass}"></property> 
		<property name="jdbcUrl" value="${jdbcUrl}"></property> 
		<property name="user" value="${user}"></property> 
		<property name="password" value="${password}"></property> 
	</bean>  -->
	
	<!-- 配置SqlSessionFactory,org.mybatis.spring.SqlSessionFactoryBean是mybatis社区开发用于整合Spring的类 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="typeAliasesPackage" value="com.shopping.bean"></property>
		<property name="mapperLocations" value="classpath:mappers/*.xml"></property>
	</bean>
	
	<!-- 创建sqlSessionTemplate -->
	<!-- <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate" >
		<constructor-arg index="0"  ref="sqlSessionFactory"></constructor-arg>
	</bean> -->
	
	<mybatis:scan base-package="com.shopping.dao"/>
	
	<!-- 配置jdbc事务 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	<!-- 启动支持annatation的注解方式事务管理 -->
	<tx:annotation-driven transaction-manager="transactionManager"/>
</beans>
